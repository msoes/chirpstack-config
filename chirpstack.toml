# Logging.
[logging]

  # Log level.
  #
  # Options are: trace, debug, info, warn error.
  #  level="info"
  level="debug"

  # If set to true, log messages are being written to syslog instead of stdout.
  log_to_syslog=false




# PostgreSQL configuration.
[postgresql]

  # PostgreSQL DSN.
  #
  # Format example: postgres://<USERNAME>:<PASSWORD>@<HOSTNAME>/<DATABASE>?sslmode=<SSLMODE>.
  #
  # SSL mode options:
  #  * disable - no SSL
  #  * require - Always SSL (skip verification)
  #  * verify-ca - Always SSL (verify that the certificate presented by the server was signed by a trusted CA)
  #  * verify-full - Always SSL (verify that the certification presented by the server was signed by a trusted CA and the server host name matches the one in the certificate)
  dsn="postgres://CS_NWKS_PGUSER:CS_NWKS_PGPWD@CS_NWKS_PGHOST/chirpstack?sslmode=disable"

  # Max open connections.
  #
  # This sets the max. number of open connections that are allowed in the
  # PostgreSQL connection pool.
  max_open_connections=16

  # Min idle connections.
  #
  # This sets the min. number of idle connections in the PostgreSQL connection
  # pool (0 = equal to max_open_connections).
  min_idle_connections=0


# Redis configuration.
[redis]

  # Server address or addresses.
  #
  # Set multiple addresses when connecting to a cluster.
  servers=[
    "redis://CS_NWKS_REDISHOST/",
  ]

  # Redis Cluster.
  #
  # Set this to true when the provided URLs are pointing to a Redis Cluster
  # instance.
  cluster=false


# Network related configuration.
[network]

  # Network identifier (NetID, 3 bytes) encoded as HEX (e.g. 010203).
  net_id="000000"

  # Enabled regions.
  #
  # Multiple regions can be enabled simultaneously. Each region must match
  # the 'name' parameter of the region configuration in '[[regions]]'.
  enabled_regions=[
    # "as923",
    # "as923_2",
    # "as923_3",
    # "as923_4",
    # "au915_0",
    # "cn470_10",
    # "cn779",
    # "eu433",
    "eu868",
    # "in865",
    # "ism2400",
    # "kr920",
    # "ru864",
    # "us915_0",
    # "us915_1",
  ]


# API interface configuration.
[api]

  # interface:port to bind the API interface to.
  bind="0.0.0.0:8080"

  # Secret.
  #
  # This secret is used for generating login and API tokens, make sure this
  # is never exposed. Changing this secret will invalidate all login and API
  # tokens. The following command can be used to generate a random secret:
  #   openssl rand -base64 32
  secret="8RoT+yEE1wqp0gtvaD6TLqehSV11OasbdBOu39NBtkY="





enabled=["mqtt", "amqp"]




[integration]
  #enabled=["mqtt"]
  enabled=["mqtt", "amqp"]
  #enabled=["amqp"]

  [integration.mqtt]
    server="tcp://CS_NWKS_RMQHOST:1883/"
    json=true
    username="CS_NWKS_RMQUSER"
    password="CS_NWKS_RMQPWD"
    # Event topic template.
    event_topic="application/{{application_id}}/device/{{dev_eui}}/event/{{event}}"
    # Command topic.
    #
    # This is the topic on which the MQTT subscribes for receiving (enqueue) commands.
    command_topic="application/{{application_id}}/device/{{dev_eui}}/command/{{command}}"
    qos=0

  # AMQP / RabbitMQ integration configuration.
  [integration.amqp]
    url="amqp://CS_NWKS_RMQUSER:CS_NWKS_RMQPWD@CS_NWKS_RMQHOST:5672"
    event_routing_key="application.{{application_id}}.device.{{dev_eui}}.event.{{event}}"
    json=true
